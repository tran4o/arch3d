diff --git a/controllers/camera-controller.js b/controllers/camera-controller.js
index 130caa5..264d469 100755
--- a/controllers/camera-controller.js
+++ b/controllers/camera-controller.js
@@ -79,6 +79,10 @@ exports.CameraController = Montage.specialize( {
     viewPointDidChange: {
         value: function() {
             this._computeInitialDistance();
+            // TSV: Fixes bad cam rotation
+            if (this._viewPoint.glTFElement != null) {
+                this._transform.matrix = this._viewPoint.glTFElement.transform.matrix;
+            }
         }
     },
 
@@ -140,6 +144,7 @@ exports.CameraController = Montage.specialize( {
             var eye = vec3.create(this.viewPoint.glTFElement.transform.translation);
             var len = 1.0;
             var direction = vec3.createFrom(0, 0, len);
+
             mat4.rotateVec3(this.viewPoint.glTFElement.transform.matrix, direction);            
             eye[0] += wheelStep * direction[0];
             eye[1] += wheelStep * direction[1];
@@ -150,19 +155,18 @@ exports.CameraController = Montage.specialize( {
 
     translate: {
         value: function(event) {
-            //this._transform.matrix = this.viewPoint.glTFElement.worldMatrix;
             if (this.moving == false)
                  return;
 
             var xDelta = event.translateX - this._lastPosition[0];
             var yDelta = event.translateY - this._lastPosition[1];
 
-            //this._lastPosition[0] = event.translateX;
-            //this._lastPosition[1] = event.translateY;
-
             xDelta  *=  0.05;
             yDelta  *=  -0.05;
 
+            console.log("X: " + xDelta);
+            console.log("Y: " + yDelta);
+
             //if (this._axisUp == null) {
                 this._axisUp = vec3.createFrom(0, 1, 0);
                 mat4.rotateVec3(this._transform.matrix, this._axisUp);
@@ -170,7 +174,6 @@ exports.CameraController = Montage.specialize( {
             var hasTarget = false;
             var targetPosition;
             if (hasTarget == false) {
-                var rootNode = this.node.glTFElement;
                 var sceneBBox =  this.sceneBBox;
                 targetPosition = [
                     (sceneBBox[0][0] + sceneBBox[1][0]) / 2,
@@ -226,7 +229,7 @@ exports.CameraController = Montage.specialize( {
             eye[2] += targetPosition[2];
 
             var  rotationMatrix = mat4.identity();
-            mat4.multiply3(cameraMat, this._transform.matrix,  rotationMatrix);
+            mat4.multiply3(cameraMat, this._transform.matrix, rotationMatrix);
 
             var translationMatrix = mat4.identity();
             mat4.translate(translationMatrix, eye);
@@ -242,17 +245,22 @@ exports.CameraController = Montage.specialize( {
             this.moving = true;
             if (this._transform == null) {
                 this._transform = Object.create(Transform).init();
+                // TSV: Fixes bad cam rotation
+                this._transform.matrix = this.viewPoint.glTFElement.transform.matrix;
             }
+            /* 
+            // Old
             this._transform.matrix = this.viewPoint.glTFElement.transform.matrix;
             this._lastPosition[0] = event.translateX;
             this._lastPosition[1] = event.translateY;
+            */
         }
     },
 
     endTranslate: {
         value: function(event) {
             this.moving = false;
-			delete this.__des;
+            delete this.__des;
             this._axisUp = null;
         }
     }
